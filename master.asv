%% Master script for the OCC (Arne MA) study

% - Resting EEG
% - Sternberg training (10 trials)
% - Sternberg actual task (8 blocks x 50 trials)
% - N-back training (10 trials)
% - N-back task (3 blocks x 100 trials)

%% General settings, screens and paths

% Set up MATLAB workspace
clear all;
close all;
clc;
rootFilepath = pwd; % Retrieve the present working directory

% Define paths
PPDEV_PATH = '/home/methlab/Documents/MATLAB/ppdev-mex-master'; % For sending EEG triggers
TITTA_PATH = '/home/methlab/Documents/MATLAB/Titta'; % For ET
DATA_PATH = '/home/methlab/Desktop/AOC/data'; % Folder to save data
FUNS_PATH = '/home/methlab/Desktop/AOC' ; % Folder with all functions

mkdir(DATA_PATH) % Make data dir, if doesn't exist yet
addpath(FUNS_PATH) % Add path to folder with functions
screenSettings % Manage screens

%% Collect ID and Age  
dialogID;

%% Protect Matlab code from participant keyboard input
ListenChar(2);

%% Resting state EEG
if ~isfile([DATA_PATH, '/', num2str(subjectID), '/', num2str(subjectID), '_Resting.mat'])
    Resting_EEG;
end

%% Randomize order of Sternberg Task and NBack Task
% Use subject ID for assignment of pseudorandom task Order (Sternberg & N-back)
if mod(subjectID, 2) == 0
    taskOrder = 'NBackSternberg';
else
    taskOrder = 'SternbergNBack';
end

%% Execute STERNBERG - NBACK %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
if strcmp(taskOrder, 'SternbergNBack')
    disp(['Subject ' 'Running Sternberg followed by N-Back...']);
    
    %% Execute Sternberg Task
    % Training phase
    TASK = 'AOC_Sternberg';
    BLOCK = 0;
    TRAINING = 1;
    trainingFile = [num2str(subjectID), '_', TASK, '_block0_training.mat'];
    if isfile([DATA_PATH, '/', num2str(subjectID), '/', trainingFile])
        percentTotalCorrect = 60;
    else
        percentTotalCorrect = 0;
    end
    
    while percentTotalCorrect < 59
        disp([TASK, ' Training TASK...']);
        eval(TASK); % Run the task
        BLOCK = BLOCK + 1;
    end
    
    % Actual task
    TRAINING = 0;
    blockCount = 8;
    start = 1;
    for i = blockCount:-1:1
        if isfile([DATA_PATH, '/', num2str(subjectID), '/', [num2str(subjectID), '_', TASK, '_block', num2str(i), '_task.mat']])
            start = i + 1;
            break;
        end
    end
    
    for BLOCK = start:blockCount
        disp([TASK, ' STARTING...']);
        eval(TASK); % Run the task
    end
    
    %% Mandatory Break of at least 5 seconds
    disp('Waiting 5 seconds between tasks...');
    WaitSecs(5);
    
    %% Execute N-back Task
    % Training phase
    TASK = 'AOC_NBack';
    BLOCK = 0;
    TRAINING = 1;
    trainingFile = [num2str(subjectID), '_', TASK, '_block0_training.mat'];
    if isfile([DATA_PATH, '/', num2str(subjectID), '/', trainingFile])
        percentTotalCorrect = 60;
    else
        percentTotalCorrect = 0;
    end
    
    while percentTotalCorrect < 59
        disp([TASK, ' Training TASK...']);
        eval(TASK); % Run the task
        BLOCK = BLOCK + 1;
    end
    
    % Actual task
    TRAINING = 0;
    blockCount = 6;
    start = 1;
    for i = blockCount:-1:1
        if isfile([DATA_PATH, '/', num2str(subjectID), '/', [num2str(subjectID), '_', TASK, '_block', num2str(i), '_task.mat']])
            start = i + 1;
            break;
        end
    end
    
    for BLOCK = start:blockCount
        disp([TASK, ' STARTING...']);
        eval(TASK); % Run the task
    end
    
%% Execute NBACK - STERNBERG %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
else
    disp('Running N-Back followed by Sternberg...');
    
    %% Execute N-back Task
    % Training phase
    TASK = 'AOC_NBack';
    BLOCK = 0;
    TRAINING = 1;
    trainingFile = [num2str(subjectID), '_', TASK, '_block0_training.mat'];
    if isfile([DATA_PATH, '/', num2str(subjectID), '/', trainingFile])
        percentTotalCorrect = 60;
    else
        percentTotalCorrect = 0;
    end
    
    while percentTotalCorrect < 59
        disp([TASK, ' Training TASK...']);
        eval(TASK); % Run the task
        BLOCK = BLOCK + 1;
    end
    
    % Actual task
    TRAINING = 0;
    blockCount = 6;
    start = 1;
    for i = blockCount:-1:1
        if isfile([DATA_PATH, '/', num2str(subjectID), '/', [num2str(subjectID), '_', TASK, '_block', num2str(i), '_task.mat']])
            start = i + 1;
            break;
        end
    end
    
    for BLOCK = start:blockCount
        disp([TASK, ' STARTING...']);
        eval(TASK); % Run the task
    end
    
    %% Mandatory Break of at least 5 seconds
    disp('Waiting 5 seconds between tasks...');
    WaitSecs(5);
    
    %% Execute Sternberg Task
    % Training phase
    TASK = 'AOC_Sternberg';
    BLOCK = 0;
    TRAINING = 1;
    trainingFile = [num2str(subjectID), '_', TASK, '_block0_training.mat'];
    if isfile([DATA_PATH, '/', num2str(subjectID), '/', trainingFile])
        percentTotalCorrect = 60;
    else
        percentTotalCorrect = 0;
    end
    
    while percentTotalCorrect < 59
        disp([TASK, ' Training TASK...']);
        eval(TASK); % Run the task
        BLOCK = BLOCK + 1;
    end
    
    % Actual task
    TRAINING = 0;
    blockCount = 8;
    start = 1;
    for i = blockCount:-1:1
        if isfile([DATA_PATH, '/', num2str(subjectID), '/', [num2str(subjectID), '_', TASK, '_block', num2str(i), '_task.mat']])
            start = i + 1;
            break;
        end
    end
    
    for BLOCK = start:blockCount
        disp([TASK, ' STARTING...']);
        eval(TASK); % Run the task
    end
end

%% Display total reward
cash;

%% Allow keyboard input into Matlab code
ListenChar(0);