install.packages(c("lmerTest", "afex", "ggplot2", "dplyr", "designr", "gridExtra", "MASS"))
library(lmerTest)
library(afex)
library(ggplot2)
library(dplyr)
library(designr)
library(gridExtra)
library(MASS)
d <- data.table(id = 1:300, gaze = rnorm(100, 0, 0.5), alpha = rnorm(100, 0, 0.5), condition = rep(c(1, 2, 3)))
# Create simulated data (M=0;SD=0.5)
d <- data.table(id = 1:300, gaze = rnorm(100, 0, 0.5), alpha = rnorm(100, 0, 0.5), condition = rep(c(1, 2, 3)))
head(d)
# Create simulated data (M=0;SD=0.5)
d <- data.table(
id = 1:300,
gaze = rnorm(300, 0, 0.5),  # 300 samples, mean = 0, sd = 0.5
alpha = rnorm(300, 0, 0.5), # 300 samples, mean = 0, sd = 0.5
condition = rep(c(1, 2, 3), length.out = 300) # Repeating 1, 2, 3 to match the length of id
)
head(d)
#install.packages(c("data.table", "lmerTest", "afex", "ggplot2", "dplyr", "designr", "gridExtra", "MASS"))
library(data.table)
# Create simulated data (M=0;SD=0.5)
d <- data.table(
id = 1:300,
gaze = rnorm(300, 0, 0.5),  # 300 samples, mean = 0, sd = 0.5
alpha = rnorm(300, 0, 0.5), # 300 samples, mean = 0, sd = 0.5
condition = rep(c(1, 2, 3), length.out = 300) # Repeating 1, 2, 3 to match the length of id
)
head(d)
library(simr)
install.packages("simr)
asd
d1
# Create simulated data (M=0;SD=0.5)
d <- data.table(
id = 1:300,
gaze = rnorm(300, 0, 0.5),  # 300 samples, mean = 0, sd = 0.5
alpha = rnorm(300, 0, 0.5), # 300 samples, mean = 0, sd = 0.5
condition = rep(c(1, 2, 3), length.out = 300) # Repeating 1, 2, 3 to match the length of id
)
head(d)
# Fit simple model with cauchy priors
fit <- brm(data = d,
family = gaussian,
alpha ~ 0 + gaze,
prior = prior(cauchy(0, 1), class = b),
seed = 1,
iter = 4000,
warmup = 2000)
summary(fit)
sasd
library(simr)
head(d)
# Create simulated data (M=0;SD=0.5)
d <- data.table(
id = rep(c(1:100), length.out = 300),
gaze = rnorm(300, 0, 0.5),  # 300 samples, mean = 0, sd = 0.5
alpha = rnorm(300, 0, 0.5), # 300 samples, mean = 0, sd = 0.5
condition = rep(c(1, 2, 3), length.out = 300) # Repeating 1, 2, 3 to match the length of id
)
head(d)
View(d)
# Create simulated data (M=0;SD=0.5)
d <- data.table(
id = rep(c(1:100), length.out = 300),
gaze = rnorm(300, 0, 0.5),  # 300 samples, mean = 0, sd = 0.5
alpha = rnorm(300, 0, 0.5), # 300 samples, mean = 0, sd = 0.5
condition = rep(c(1, 2, 3), length.out = 300) # Repeating 1, 2, 3 to match the length of id
)
head(d)
# Define Linear Mixed Effects Model
lmer(alpha ~ gaze * condition + (1|id), data = d)
# Define Linear Mixed Effects Model
model <- lmer(alpha ~ gaze * condition + (1|id), data = d)
# POWER ANALYSIS WITH SIMR
powerC <- powerCurve(fit_gaze = model, test = fixed("gaze"), along = "id", breaks = c(25, 50, 75, 100))
powerC <- powerCurve(fit_condition = model, test = fixed("gaze"), along = "id", breaks = c(25, 50, 75, 100))
# POWER ANALYSIS WITH SIMR
powerC <- powerCurve(fit = model, test = fixed("gaze"), along = "id", breaks = c(25, 50, 75, 100))
#powerC <- powerCurve(fit = model, test = fixed("gaze"), along = "id", breaks = c(25, 50, 75, 100))
summary(model, corr = F)
#powerC <- powerCurve(fit = model, test = fixed("gaze"), along = "id", breaks = c(25, 50, 75, 100))
print(powerC)
if (!require("devtools")) {
install.packages("devtools", dependencies = TRUE)}
devtools::install_github("DejanDraschkow/mixedpower") # mixedpower is hosted on GitHub
# load library
library(mixedpower)
## AOC Simulation for Power Analysis
#install.packages(c("data.table", "lmerTest", "afex", "ggplot2", "dplyr", "designr", "gridExtra", "MASS", "simr", "devtools"))
library(data.table)
library(lmerTest)
library(afex)
library(ggplot2)
library(dplyr)
library(designr)
library(gridExtra)
library(MASS)
library(simr)
library(mixedpower)
# Create simulated data (M=0;SD=0.5)
d <- data.table(
id = rep(c(1:100), length.out = 300),
gaze = rnorm(300, 0, 0.5),  # 300 samples, mean = 0, sd = 0.5
alpha = rnorm(300, 0, 0.5), # 300 samples, mean = 0, sd = 0.5
condition = rep(c(1, 2, 3), length.out = 300) # Repeating 1, 2, 3 to match the length of id
)
head(d)
# Define Linear Mixed Effects Model
model <- lmer(alpha ~ gaze * condition + (1|id), data = d)
# POWER ANALYSIS WITH SIMR
#powerC <- powerCurve(fit = model, test = fixed("gaze"), along = "id", breaks = c(25, 50, 75, 100))
#powerC <- powerCurve(fit = model, test = fixed("gaze"), along = "id", breaks = c(25, 50, 75, 100))
#print(powerC)
# Power analysis with MIXEDPOWER
power_sim <- mixedpower(model = model, data = d,
fixed_effects = c("gaze", "condition"),
simvar = "id", steps = c(25,50,75,100),
critical_value = 2, n_sim = 100)
power_sim
# Power analysis with MIXEDPOWER
power_sim <- mixedpower(model = model, data = d,
fixed_effects = c("gaze", "condition"),
simvar = "id", steps = c(25,50,75,100),
critical_value = 2, n_sim = 1000)
power_sim
simrOptions(progress=FALSE)
library(Matrix)
library(lme4)
library(Matrix)
# Create simulated data (M=0;SD=0.5)
d <- data.frame(
id = rep(c(1:100), length.out = 300),
gaze = rnorm(300, 0, 0.5),  # 300 samples, mean = 0, sd = 0.5
alpha = rnorm(300, 0, 0.5), # 300 samples, mean = 0, sd = 0.5
condition = rep(c(1, 2, 3), length.out = 300) # Repeating 1, 2, 3 to match the length of id
)
